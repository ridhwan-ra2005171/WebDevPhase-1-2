// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator dbml {
  provider = "prisma-dbml-generator"
}

model Institution {
  instituteID String  @id @default(cuid())
  code        String
  name        String
  country     String
  papers      Paper[]
}

model Location {
  locationID String    @id @default(cuid())
  building   String
  room       String
  sessions   Session[]
}

model Paper {
  paperID     String      @id @default(cuid())
  title       String
  abstract    String
  authors     User[]      @relation("PaperAuthors")
  presenterID Int?
  pdfLink     String
  reviews     Review[]    @relation("PaperReviews")
  session     Session?    @relation(fields: [sesID], references: [sesID])
  sesID       String?
  institutes  Institution @relation(fields: [instituteID], references: [instituteID])
  instituteID String
}

model Session {
  sesID       String   @id @default(cuid())
  title       String
  location    Location @relation(fields: [locationID], references: [locationID])
  locationID  String
  presenter   User     @relation("PresenterSessions", fields: [presenterID], references: [id])
  presenterID Int
  fromTime    String
  endTime     String
  schedule    Schedule @relation(fields: [schID], references: [schID], onDelete: Cascade)
  schID       String
  papers      Paper[]
}

model Review {
  reviewID          String @id @default(cuid())
  overallEvaluation Int?
  paperContribution Int? 
  paperStrength     String? 
  paperWeaknesses   String? 
  paper             Paper  @relation("PaperReviews",fields: [paperID], references: [paperID], onDelete: Cascade)
  paperID           String
  user              User   @relation("UserReviews",fields: [reviewerID], references: [id], onDelete: Cascade)
  reviewerID        Int
}

model Schedule {
  schID    String    @id @default(cuid())
  date     String
  sessions Session[]
}

model User {
  id                Int       @id @default(autoincrement())
  first_name        String
  last_name         String
  email             String    @unique
  password          String
  role              String
  authoredPapers    Paper[]   @relation("PaperAuthors")
  presentedSessions Session[] @relation("PresenterSessions")
  reviews           Review[] @relation("UserReviews")
}
